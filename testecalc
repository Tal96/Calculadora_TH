import customtkinter as ctk
from asteval import Interpreter

# Inicializa o intérprete do asteval
aeval = Interpreter()

# Função para calcular a expressão
def calcular():
    expressao = entrada.get()
    try:
        resultado = aeval(expressao)
        entrada.delete(0, 'end')  # Limpa a entrada
        entrada.insert(0, str(resultado))  # Exibe o resultado
    except Exception as e:
        entrada.delete(0, 'end')
        entrada.insert(0, f"Erro: {e}")

# Função para adicionar números e operadores à entrada
def adicionar(simbolo):
    entrada.insert('end', simbolo)

# Configurações da janela principal
ctk.set_appearance_mode("light")  # Modo claro
ctk.set_default_color_theme("blue")  # Tema azul

janela = ctk.CTk()  # Cria a janela
janela.title("Calculadora")
janela.geometry("400x400")  # Tamanho da janela

# Campo de entrada
entrada = ctk.CTkEntry(janela, placeholder_text="Digite a expressão", width=300)
entrada.pack(pady=20, padx=20)

# Definindo os botões em uma grade
botoes = [
    '7', '8', '9', '/',
    '4', '5', '6', '*',
    '1', '2', '3', '-',
    '0', '.', '=', '+',
]

# Cria os botões e os adiciona à grade
linha = 0
coluna = 0
for simbolo in botoes:
    botao = ctk.CTkButton(janela, text=simbolo, command=lambda s=simbolo: adicionar(s) if s != '=' else calcular())
    botao.grid(row=linha, column=coluna, padx=5, pady=5, sticky='nsew')  # Adiciona o botão à grade
    coluna += 1
    if coluna > 3:  # Após 4 colunas, vai para a próxima linha
        coluna = 0
        linha += 1

# Configuração das linhas e colunas para expandir
for i in range(4):
    janela.grid_columnconfigure(i, weight=1)
for i in range(4):
    janela.grid_rowconfigure(i, weight=1)

# Executa a janela
janela.mainloop()